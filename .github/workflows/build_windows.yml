name: Build and Release App (Windows)

on:
  release:
    types: [published]     # Trigger on GitHub release
  workflow_dispatch:       # Manual trigger from GitHub UI

permissions:
  contents: write  # Required to upload release assets
  
jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Read version
        id: get_version
        run: |
          python -c 'from src import __version__; print(f"app_version={__version__}")' >> $env:GITHUB_OUTPUT

      - uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: src/main.py
          mode: onefile
          onefile-no-compression: true
          enable-plugins: tk-inter
          include-data-files: SysmacSymbolExport.ico=SysmacSymbolExport.ico
          windows-console-mode: attach
          windows-icon-from-ico: SysmacSymbolExport.ico
          output-file: SysmacSymbolExport-v${{ steps.get_version.outputs.app_version }}.exe
          company-name: Loïc GRENON
          product-name: SysmacSymbolExport
          product-version: ${{ steps.get_version.outputs.app_version }}
          file-version: ${{ steps.get_version.outputs.app_version }}
          file-description: A tool to export global variables from OMRON Sysmac Studio projects
          copyright: 2025 - Loïc GRENON

      - name: Upload release asset
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2
        with:
          files: |
            build/SysmacSymbolExport*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload executable as artifact (for manual trigger)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: SysmacSymbolExport-v${{ steps.get_version.outputs.app_version }}
          path: build/SysmacSymbolExport*.exe
